!function(e){"use strict";function t(e,t,i,n){return new(i||(i=Promise))((function(o,r){function a(e){try{c(n.next(e))}catch(e){r(e)}}function s(e){try{c(n.throw(e))}catch(e){r(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(a,s)}c((n=n.apply(e,t||[])).next())}))}class i{constructor(e,t,i){this.method=e,this.attribute=t,void 0!==i&&(Array.isArray(i)?this.values=i:this.values=[i])}toString(){return JSON.stringify({method:this.method,attribute:this.attribute,values:this.values})}}i.equal=(e,t)=>new i("equal",e,t).toString(),i.notEqual=(e,t)=>new i("notEqual",e,t).toString(),i.lessThan=(e,t)=>new i("lessThan",e,t).toString(),i.lessThanEqual=(e,t)=>new i("lessThanEqual",e,t).toString(),i.greaterThan=(e,t)=>new i("greaterThan",e,t).toString(),i.greaterThanEqual=(e,t)=>new i("greaterThanEqual",e,t).toString(),i.isNull=e=>new i("isNull",e).toString(),i.isNotNull=e=>new i("isNotNull",e).toString(),i.between=(e,t,n)=>new i("between",e,[t,n]).toString(),i.startsWith=(e,t)=>new i("startsWith",e,t).toString(),i.endsWith=(e,t)=>new i("endsWith",e,t).toString(),i.select=e=>new i("select",void 0,e).toString(),i.search=(e,t)=>new i("search",e,t).toString(),i.orderDesc=e=>new i("orderDesc",e).toString(),i.orderAsc=e=>new i("orderAsc",e).toString(),i.cursorAfter=e=>new i("cursorAfter",void 0,e).toString(),i.cursorBefore=e=>new i("cursorBefore",void 0,e).toString(),i.limit=e=>new i("limit",void 0,e).toString(),i.offset=e=>new i("offset",void 0,e).toString(),i.contains=(e,t)=>new i("contains",e,t).toString(),i.or=e=>new i("or",void 0,e.map((e=>JSON.parse(e)))).toString(),i.and=e=>new i("and",void 0,e.map((e=>JSON.parse(e)))).toString();class n extends Error{constructor(e,t=0,i="",n=""){super(e),this.name="AppwriteException",this.message=e,this.code=t,this.type=i,this.response=n}}class o{constructor(){this.config={endpoint:"https://cloud.appwrite.io/v1",endpointRealtime:"",project:"",jwt:"",locale:"",session:""},this.headers={"x-sdk-name":"Web","x-sdk-platform":"client","x-sdk-language":"web","x-sdk-version":"17.0.1","X-Appwrite-Response-Format":"1.6.0"},this.realtime={socket:void 0,timeout:void 0,heartbeat:void 0,url:"",channels:new Set,subscriptions:new Map,subscriptionsCounter:0,reconnect:!0,reconnectAttempts:0,lastMessage:void 0,connect:()=>{clearTimeout(this.realtime.timeout),this.realtime.timeout=null===window||void 0===window?void 0:window.setTimeout((()=>{this.realtime.createSocket()}),50)},getTimeout:()=>{switch(!0){case this.realtime.reconnectAttempts<5:return 1e3;case this.realtime.reconnectAttempts<15:return 5e3;case this.realtime.reconnectAttempts<100:return 1e4;default:return 6e4}},createHeartbeat:()=>{this.realtime.heartbeat&&clearTimeout(this.realtime.heartbeat),this.realtime.heartbeat=null===window||void 0===window?void 0:window.setInterval((()=>{var e;null===(e=this.realtime.socket)||void 0===e||e.send(JSON.stringify({type:"ping"}))}),2e4)},createSocket:()=>{var e,t,i;if(this.realtime.channels.size<1)return this.realtime.reconnect=!1,void(null===(e=this.realtime.socket)||void 0===e||e.close());const n=new URLSearchParams;n.set("project",this.config.project),this.realtime.channels.forEach((e=>{n.append("channels[]",e)}));const o=this.config.endpointRealtime+"/realtime?"+n.toString();(o!==this.realtime.url||!this.realtime.socket||(null===(t=this.realtime.socket)||void 0===t?void 0:t.readyState)>WebSocket.OPEN)&&(this.realtime.socket&&(null===(i=this.realtime.socket)||void 0===i?void 0:i.readyState)<WebSocket.CLOSING&&(this.realtime.reconnect=!1,this.realtime.socket.close()),this.realtime.url=o,this.realtime.socket=new WebSocket(o),this.realtime.socket.addEventListener("message",this.realtime.onMessage),this.realtime.socket.addEventListener("open",(e=>{this.realtime.reconnectAttempts=0,this.realtime.createHeartbeat()})),this.realtime.socket.addEventListener("close",(e=>{var t,i,n;if(!this.realtime.reconnect||"error"===(null===(i=null===(t=this.realtime)||void 0===t?void 0:t.lastMessage)||void 0===i?void 0:i.type)&&1008===(null===(n=this.realtime)||void 0===n?void 0:n.lastMessage.data).code)return void(this.realtime.reconnect=!0);const o=this.realtime.getTimeout();console.error(`Realtime got disconnected. Reconnect will be attempted in ${o/1e3} seconds.`,e.reason),setTimeout((()=>{this.realtime.reconnectAttempts++,this.realtime.createSocket()}),o)})))},onMessage:e=>{var t,i;try{const n=JSON.parse(e.data);switch(this.realtime.lastMessage=n,n.type){case"connected":const e=JSON.parse(null!==(t=window.localStorage.getItem("cookieFallback"))&&void 0!==t?t:"{}"),o=null==e?void 0:e[`a_session_${this.config.project}`],r=n.data;o&&!r.user&&(null===(i=this.realtime.socket)||void 0===i||i.send(JSON.stringify({type:"authentication",data:{session:o}})));break;case"event":let a=n.data;if(null==a?void 0:a.channels){if(!a.channels.some((e=>this.realtime.channels.has(e))))return;this.realtime.subscriptions.forEach((e=>{a.channels.some((t=>e.channels.includes(t)))&&setTimeout((()=>e.callback(a)))}))}break;case"pong":default:break;case"error":throw n.data}}catch(e){console.error(e)}},cleanUp:e=>{this.realtime.channels.forEach((t=>{if(e.includes(t)){Array.from(this.realtime.subscriptions).some((([e,i])=>i.channels.includes(t)))||this.realtime.channels.delete(t)}}))}}}setEndpoint(e){return this.config.endpoint=e,this.config.endpointRealtime=this.config.endpointRealtime||this.config.endpoint.replace("https://","wss://").replace("http://","ws://"),this}setEndpointRealtime(e){return this.config.endpointRealtime=e,this}setProject(e){return this.headers["X-Appwrite-Project"]=e,this.config.project=e,this}setJWT(e){return this.headers["X-Appwrite-JWT"]=e,this.config.jwt=e,this}setLocale(e){return this.headers["X-Appwrite-Locale"]=e,this.config.locale=e,this}setSession(e){return this.headers["X-Appwrite-Session"]=e,this.config.session=e,this}subscribe(e,t){let i="string"==typeof e?[e]:e;i.forEach((e=>this.realtime.channels.add(e)));const n=this.realtime.subscriptionsCounter++;return this.realtime.subscriptions.set(n,{channels:i,callback:t}),this.realtime.connect(),()=>{this.realtime.subscriptions.delete(n),this.realtime.cleanUp(i),this.realtime.connect()}}prepareRequest(e,t,i={},n={}){if(e=e.toUpperCase(),i=Object.assign({},this.headers,i),"undefined"!=typeof window&&window.localStorage){const e=window.localStorage.getItem("cookieFallback");e&&(i["X-Fallback-Cookies"]=e)}let r={method:e,headers:i,credentials:"include"};if("GET"===e)for(const[e,i]of Object.entries(o.flatten(n)))t.searchParams.append(e,i);else switch(i["content-type"]){case"application/json":r.body=JSON.stringify(n);break;case"multipart/form-data":const e=new FormData;for(const[t,i]of Object.entries(n))if(i instanceof File)e.append(t,i,i.name);else if(Array.isArray(i))for(const n of i)e.append(`${t}[]`,n);else e.append(t,i);r.body=e,delete i["content-type"]}return{uri:t.toString(),options:r}}chunkedUpload(e,i,n={},r={},a){return t(this,void 0,void 0,(function*(){const t=Object.values(r).find((e=>e instanceof File));if(t.size<=o.CHUNK_SIZE)return yield this.call(e,i,n,r);let s=0,c=null;for(;s<t.size;){let d=s+o.CHUNK_SIZE;d>=t.size&&(d=t.size),n["content-range"]=`bytes ${s}-${d-1}/${t.size}`;const l=t.slice(s,d);let p=Object.assign(Object.assign({},r),{file:new File([l],t.name)});c=yield this.call(e,i,n,p),a&&"function"==typeof a&&a({$id:c.$id,progress:Math.round(d/t.size*100),sizeUploaded:d,chunksTotal:Math.ceil(t.size/o.CHUNK_SIZE),chunksUploaded:Math.ceil(d/o.CHUNK_SIZE)}),c&&c.$id&&(n["x-appwrite-id"]=c.$id),s=d}return c}))}ping(){return t(this,void 0,void 0,(function*(){return this.call("GET",new URL(this.config.endpoint+"/ping"))}))}call(e,i,o={},r={},a="json"){var s;return t(this,void 0,void 0,(function*(){const{uri:t,options:c}=this.prepareRequest(e,i,o,r);let d=null,l="";const p=yield fetch(t,c),u=p.headers.get("x-appwrite-warning");if(u&&u.split(";").forEach((e=>console.warn("Warning: "+e))),(null===(s=p.headers.get("content-type"))||void 0===s?void 0:s.includes("application/json"))?(d=yield p.json(),l=JSON.stringify(d)):"arrayBuffer"===a?d=yield p.arrayBuffer():(l=yield p.text(),d={message:l}),400<=p.status)throw new n(null==d?void 0:d.message,p.status,null==d?void 0:d.type,l);const h=p.headers.get("X-Fallback-Cookies");return"undefined"!=typeof window&&window.localStorage&&h&&(window.console.warn("Appwrite is using localStorage for session management. Increase your security by adding a custom domain as your API endpoint."),window.localStorage.setItem("cookieFallback",h)),d}))}static flatten(e,t=""){let i={};for(const[n,r]of Object.entries(e)){let e=t?t+"["+n+"]":n;Array.isArray(r)?i=Object.assign(Object.assign({},i),o.flatten(r,e)):i[e]=r}return i}}o.CHUNK_SIZE=5242880;class r{constructor(e){this.client=e}static flatten(e,t=""){let i={};for(const[n,o]of Object.entries(e)){let e=t?t+"["+n+"]":n;Array.isArray(o)?i=Object.assign(Object.assign({},i),r.flatten(o,e)):i[e]=o}return i}}r.CHUNK_SIZE=5242880;class a{}a.read=e=>`read("${e}")`,a.write=e=>`write("${e}")`,a.create=e=>`create("${e}")`,a.update=e=>`update("${e}")`,a.delete=e=>`delete("${e}")`;var s,c,d,l,p,u,h,g,m,w;class f{static custom(e){return e}static unique(e=7){const t=function(e,t,i,n){if("a"===i&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===i?n:"a"===i?n.call(e):n?n.value:t.get(e)}(f,s,"m",c).call(f);let i="";for(let t=0;t<e;t++){i+=Math.floor(16*Math.random()).toString(16)}return t+i}}s=f,c=function(){const e=new Date,t=Math.floor(e.getTime()/1e3),i=e.getMilliseconds();return t.toString(16)+i.toString(16).padStart(5,"0")},e.AuthenticatorType=void 0,(e.AuthenticatorType||(e.AuthenticatorType={})).Totp="totp",e.AuthenticationFactor=void 0,(d=e.AuthenticationFactor||(e.AuthenticationFactor={})).Email="email",d.Phone="phone",d.Totp="totp",d.Recoverycode="recoverycode",e.OAuthProvider=void 0,(l=e.OAuthProvider||(e.OAuthProvider={})).Amazon="amazon",l.Apple="apple",l.Auth0="auth0",l.Authentik="authentik",l.Autodesk="autodesk",l.Bitbucket="bitbucket",l.Bitly="bitly",l.Box="box",l.Dailymotion="dailymotion",l.Discord="discord",l.Disqus="disqus",l.Dropbox="dropbox",l.Etsy="etsy",l.Facebook="facebook",l.Github="github",l.Gitlab="gitlab",l.Google="google",l.Linkedin="linkedin",l.Microsoft="microsoft",l.Notion="notion",l.Oidc="oidc",l.Okta="okta",l.Paypal="paypal",l.PaypalSandbox="paypalSandbox",l.Podio="podio",l.Salesforce="salesforce",l.Slack="slack",l.Spotify="spotify",l.Stripe="stripe",l.Tradeshift="tradeshift",l.TradeshiftBox="tradeshiftBox",l.Twitch="twitch",l.Wordpress="wordpress",l.Yahoo="yahoo",l.Yammer="yammer",l.Yandex="yandex",l.Zoho="zoho",l.Zoom="zoom",l.Mock="mock",e.Browser=void 0,(p=e.Browser||(e.Browser={})).AvantBrowser="aa",p.AndroidWebViewBeta="an",p.GoogleChrome="ch",p.GoogleChromeIOS="ci",p.GoogleChromeMobile="cm",p.Chromium="cr",p.MozillaFirefox="ff",p.Safari="sf",p.MobileSafari="mf",p.MicrosoftEdge="ps",p.MicrosoftEdgeIOS="oi",p.OperaMini="om",p.Opera="op",p.OperaNext="on",e.CreditCard=void 0,(u=e.CreditCard||(e.CreditCard={})).AmericanExpress="amex",u.Argencard="argencard",u.Cabal="cabal",u.Cencosud="cencosud",u.DinersClub="diners",u.Discover="discover",u.Elo="elo",u.Hipercard="hipercard",u.JCB="jcb",u.Mastercard="mastercard",u.Naranja="naranja",u.TarjetaShopping="targeta-shopping",u.UnionChinaPay="union-china-pay",u.Visa="visa",u.MIR="mir",u.Maestro="maestro",e.Flag=void 0,(h=e.Flag||(e.Flag={})).Afghanistan="af",h.Angola="ao",h.Albania="al",h.Andorra="ad",h.UnitedArabEmirates="ae",h.Argentina="ar",h.Armenia="am",h.AntiguaAndBarbuda="ag",h.Australia="au",h.Austria="at",h.Azerbaijan="az",h.Burundi="bi",h.Belgium="be",h.Benin="bj",h.BurkinaFaso="bf",h.Bangladesh="bd",h.Bulgaria="bg",h.Bahrain="bh",h.Bahamas="bs",h.BosniaAndHerzegovina="ba",h.Belarus="by",h.Belize="bz",h.Bolivia="bo",h.Brazil="br",h.Barbados="bb",h.BruneiDarussalam="bn",h.Bhutan="bt",h.Botswana="bw",h.CentralAfricanRepublic="cf",h.Canada="ca",h.Switzerland="ch",h.Chile="cl",h.China="cn",h.CoteDIvoire="ci",h.Cameroon="cm",h.DemocraticRepublicOfTheCongo="cd",h.RepublicOfTheCongo="cg",h.Colombia="co",h.Comoros="km",h.CapeVerde="cv",h.CostaRica="cr",h.Cuba="cu",h.Cyprus="cy",h.CzechRepublic="cz",h.Germany="de",h.Djibouti="dj",h.Dominica="dm",h.Denmark="dk",h.DominicanRepublic="do",h.Algeria="dz",h.Ecuador="ec",h.Egypt="eg",h.Eritrea="er",h.Spain="es",h.Estonia="ee",h.Ethiopia="et",h.Finland="fi",h.Fiji="fj",h.France="fr",h.MicronesiaFederatedStatesOf="fm",h.Gabon="ga",h.UnitedKingdom="gb",h.Georgia="ge",h.Ghana="gh",h.Guinea="gn",h.Gambia="gm",h.GuineaBissau="gw",h.EquatorialGuinea="gq",h.Greece="gr",h.Grenada="gd",h.Guatemala="gt",h.Guyana="gy",h.Honduras="hn",h.Croatia="hr",h.Haiti="ht",h.Hungary="hu",h.Indonesia="id",h.India="in",h.Ireland="ie",h.IranIslamicRepublicOf="ir",h.Iraq="iq",h.Iceland="is",h.Israel="il",h.Italy="it",h.Jamaica="jm",h.Jordan="jo",h.Japan="jp",h.Kazakhstan="kz",h.Kenya="ke",h.Kyrgyzstan="kg",h.Cambodia="kh",h.Kiribati="ki",h.SaintKittsAndNevis="kn",h.SouthKorea="kr",h.Kuwait="kw",h.LaoPeopleSDemocraticRepublic="la",h.Lebanon="lb",h.Liberia="lr",h.Libya="ly",h.SaintLucia="lc",h.Liechtenstein="li",h.SriLanka="lk",h.Lesotho="ls",h.Lithuania="lt",h.Luxembourg="lu",h.Latvia="lv",h.Morocco="ma",h.Monaco="mc",h.Moldova="md",h.Madagascar="mg",h.Maldives="mv",h.Mexico="mx",h.MarshallIslands="mh",h.NorthMacedonia="mk",h.Mali="ml",h.Malta="mt",h.Myanmar="mm",h.Montenegro="me",h.Mongolia="mn",h.Mozambique="mz",h.Mauritania="mr",h.Mauritius="mu",h.Malawi="mw",h.Malaysia="my",h.Namibia="na",h.Niger="ne",h.Nigeria="ng",h.Nicaragua="ni",h.Netherlands="nl",h.Norway="no",h.Nepal="np",h.Nauru="nr",h.NewZealand="nz",h.Oman="om",h.Pakistan="pk",h.Panama="pa",h.Peru="pe",h.Philippines="ph",h.Palau="pw",h.PapuaNewGuinea="pg",h.Poland="pl",h.FrenchPolynesia="pf",h.NorthKorea="kp",h.Portugal="pt",h.Paraguay="py",h.Qatar="qa",h.Romania="ro",h.Russia="ru",h.Rwanda="rw",h.SaudiArabia="sa",h.Sudan="sd",h.Senegal="sn",h.Singapore="sg",h.SolomonIslands="sb",h.SierraLeone="sl",h.ElSalvador="sv",h.SanMarino="sm",h.Somalia="so",h.Serbia="rs",h.SouthSudan="ss",h.SaoTomeAndPrincipe="st",h.Suriname="sr",h.Slovakia="sk",h.Slovenia="si",h.Sweden="se",h.Eswatini="sz",h.Seychelles="sc",h.Syria="sy",h.Chad="td",h.Togo="tg",h.Thailand="th",h.Tajikistan="tj",h.Turkmenistan="tm",h.TimorLeste="tl",h.Tonga="to",h.TrinidadAndTobago="tt",h.Tunisia="tn",h.Turkey="tr",h.Tuvalu="tv",h.Tanzania="tz",h.Uganda="ug",h.Ukraine="ua",h.Uruguay="uy",h.UnitedStates="us",h.Uzbekistan="uz",h.VaticanCity="va",h.SaintVincentAndTheGrenadines="vc",h.Venezuela="ve",h.Vietnam="vn",h.Vanuatu="vu",h.Samoa="ws",h.Yemen="ye",h.SouthAfrica="za",h.Zambia="zm",h.Zimbabwe="zw",e.ExecutionMethod=void 0,(g=e.ExecutionMethod||(e.ExecutionMethod={})).GET="GET",g.POST="POST",g.PUT="PUT",g.PATCH="PATCH",g.DELETE="DELETE",g.OPTIONS="OPTIONS",e.ImageGravity=void 0,(m=e.ImageGravity||(e.ImageGravity={})).Center="center",m.Topleft="top-left",m.Top="top",m.Topright="top-right",m.Left="left",m.Right="right",m.Bottomleft="bottom-left",m.Bottom="bottom",m.Bottomright="bottom-right",e.ImageFormat=void 0,(w=e.ImageFormat||(e.ImageFormat={})).Jpg="jpg",w.Jpeg="jpeg",w.Gif="gif",w.Png="png",w.Webp="webp",w.Heic="heic",w.Avif="avif",e.Account=class{constructor(e){this.client=e}get(){const e=new URL(this.client.config.endpoint+"/account");return this.client.call("get",e,{"content-type":"application/json"},{})}create(e,t,i,o){if(void 0===e)throw new n('Missing required parameter: "userId"');if(void 0===t)throw new n('Missing required parameter: "email"');if(void 0===i)throw new n('Missing required parameter: "password"');const r={};void 0!==e&&(r.userId=e),void 0!==t&&(r.email=t),void 0!==i&&(r.password=i),void 0!==o&&(r.name=o);const a=new URL(this.client.config.endpoint+"/account");return this.client.call("post",a,{"content-type":"application/json"},r)}updateEmail(e,t){if(void 0===e)throw new n('Missing required parameter: "email"');if(void 0===t)throw new n('Missing required parameter: "password"');const i={};void 0!==e&&(i.email=e),void 0!==t&&(i.password=t);const o=new URL(this.client.config.endpoint+"/account/email");return this.client.call("patch",o,{"content-type":"application/json"},i)}listIdentities(e){const t={};void 0!==e&&(t.queries=e);const i=new URL(this.client.config.endpoint+"/account/identities");return this.client.call("get",i,{"content-type":"application/json"},t)}deleteIdentity(e){if(void 0===e)throw new n('Missing required parameter: "identityId"');const t="/account/identities/{identityId}".replace("{identityId}",e),i=new URL(this.client.config.endpoint+t);return this.client.call("delete",i,{"content-type":"application/json"},{})}createJWT(){const e=new URL(this.client.config.endpoint+"/account/jwts");return this.client.call("post",e,{"content-type":"application/json"},{})}listLogs(e){const t={};void 0!==e&&(t.queries=e);const i=new URL(this.client.config.endpoint+"/account/logs");return this.client.call("get",i,{"content-type":"application/json"},t)}updateMFA(e){if(void 0===e)throw new n('Missing required parameter: "mfa"');const t={};void 0!==e&&(t.mfa=e);const i=new URL(this.client.config.endpoint+"/account/mfa");return this.client.call("patch",i,{"content-type":"application/json"},t)}createMfaAuthenticator(e){if(void 0===e)throw new n('Missing required parameter: "type"');const t="/account/mfa/authenticators/{type}".replace("{type}",e),i=new URL(this.client.config.endpoint+t);return this.client.call("post",i,{"content-type":"application/json"},{})}updateMfaAuthenticator(e,t){if(void 0===e)throw new n('Missing required parameter: "type"');if(void 0===t)throw new n('Missing required parameter: "otp"');const i="/account/mfa/authenticators/{type}".replace("{type}",e),o={};void 0!==t&&(o.otp=t);const r=new URL(this.client.config.endpoint+i);return this.client.call("put",r,{"content-type":"application/json"},o)}deleteMfaAuthenticator(e){if(void 0===e)throw new n('Missing required parameter: "type"');const t="/account/mfa/authenticators/{type}".replace("{type}",e),i=new URL(this.client.config.endpoint+t);return this.client.call("delete",i,{"content-type":"application/json"},{})}createMfaChallenge(e){if(void 0===e)throw new n('Missing required parameter: "factor"');const t={};void 0!==e&&(t.factor=e);const i=new URL(this.client.config.endpoint+"/account/mfa/challenge");return this.client.call("post",i,{"content-type":"application/json"},t)}updateMfaChallenge(e,t){if(void 0===e)throw new n('Missing required parameter: "challengeId"');if(void 0===t)throw new n('Missing required parameter: "otp"');const i={};void 0!==e&&(i.challengeId=e),void 0!==t&&(i.otp=t);const o=new URL(this.client.config.endpoint+"/account/mfa/challenge");return this.client.call("put",o,{"content-type":"application/json"},i)}listMfaFactors(){const e=new URL(this.client.config.endpoint+"/account/mfa/factors");return this.client.call("get",e,{"content-type":"application/json"},{})}getMfaRecoveryCodes(){const e=new URL(this.client.config.endpoint+"/account/mfa/recovery-codes");return this.client.call("get",e,{"content-type":"application/json"},{})}createMfaRecoveryCodes(){const e=new URL(this.client.config.endpoint+"/account/mfa/recovery-codes");return this.client.call("post",e,{"content-type":"application/json"},{})}updateMfaRecoveryCodes(){const e=new URL(this.client.config.endpoint+"/account/mfa/recovery-codes");return this.client.call("patch",e,{"content-type":"application/json"},{})}updateName(e){if(void 0===e)throw new n('Missing required parameter: "name"');const t={};void 0!==e&&(t.name=e);const i=new URL(this.client.config.endpoint+"/account/name");return this.client.call("patch",i,{"content-type":"application/json"},t)}updatePassword(e,t){if(void 0===e)throw new n('Missing required parameter: "password"');const i={};void 0!==e&&(i.password=e),void 0!==t&&(i.oldPassword=t);const o=new URL(this.client.config.endpoint+"/account/password");return this.client.call("patch",o,{"content-type":"application/json"},i)}updatePhone(e,t){if(void 0===e)throw new n('Missing required parameter: "phone"');if(void 0===t)throw new n('Missing required parameter: "password"');const i={};void 0!==e&&(i.phone=e),void 0!==t&&(i.password=t);const o=new URL(this.client.config.endpoint+"/account/phone");return this.client.call("patch",o,{"content-type":"application/json"},i)}getPrefs(){const e=new URL(this.client.config.endpoint+"/account/prefs");return this.client.call("get",e,{"content-type":"application/json"},{})}updatePrefs(e){if(void 0===e)throw new n('Missing required parameter: "prefs"');const t={};void 0!==e&&(t.prefs=e);const i=new URL(this.client.config.endpoint+"/account/prefs");return this.client.call("patch",i,{"content-type":"application/json"},t)}createRecovery(e,t){if(void 0===e)throw new n('Missing required parameter: "email"');if(void 0===t)throw new n('Missing required parameter: "url"');const i={};void 0!==e&&(i.email=e),void 0!==t&&(i.url=t);const o=new URL(this.client.config.endpoint+"/account/recovery");return this.client.call("post",o,{"content-type":"application/json"},i)}updateRecovery(e,t,i){if(void 0===e)throw new n('Missing required parameter: "userId"');if(void 0===t)throw new n('Missing required parameter: "secret"');if(void 0===i)throw new n('Missing required parameter: "password"');const o={};void 0!==e&&(o.userId=e),void 0!==t&&(o.secret=t),void 0!==i&&(o.password=i);const r=new URL(this.client.config.endpoint+"/account/recovery");return this.client.call("put",r,{"content-type":"application/json"},o)}listSessions(){const e=new URL(this.client.config.endpoint+"/account/sessions");return this.client.call("get",e,{"content-type":"application/json"},{})}deleteSessions(){const e=new URL(this.client.config.endpoint+"/account/sessions");return this.client.call("delete",e,{"content-type":"application/json"},{})}createAnonymousSession(){const e=new URL(this.client.config.endpoint+"/account/sessions/anonymous");return this.client.call("post",e,{"content-type":"application/json"},{})}createEmailPasswordSession(e,t){if(void 0===e)throw new n('Missing required parameter: "email"');if(void 0===t)throw new n('Missing required parameter: "password"');const i={};void 0!==e&&(i.email=e),void 0!==t&&(i.password=t);const o=new URL(this.client.config.endpoint+"/account/sessions/email");return this.client.call("post",o,{"content-type":"application/json"},i)}updateMagicURLSession(e,t){if(void 0===e)throw new n('Missing required parameter: "userId"');if(void 0===t)throw new n('Missing required parameter: "secret"');const i={};void 0!==e&&(i.userId=e),void 0!==t&&(i.secret=t);const o=new URL(this.client.config.endpoint+"/account/sessions/magic-url");return this.client.call("put",o,{"content-type":"application/json"},i)}createOAuth2Session(e,t,i,o){if(void 0===e)throw new n('Missing required parameter: "provider"');const a="/account/sessions/oauth2/{provider}".replace("{provider}",e),s={};void 0!==t&&(s.success=t),void 0!==i&&(s.failure=i),void 0!==o&&(s.scopes=o);const c=new URL(this.client.config.endpoint+a);s.project=this.client.config.project;for(const[e,t]of Object.entries(r.flatten(s)))c.searchParams.append(e,t);return"undefined"!=typeof window&&(null===window||void 0===window?void 0:window.location)?void(window.location.href=c.toString()):c.toString()}updatePhoneSession(e,t){if(void 0===e)throw new n('Missing required parameter: "userId"');if(void 0===t)throw new n('Missing required parameter: "secret"');const i={};void 0!==e&&(i.userId=e),void 0!==t&&(i.secret=t);const o=new URL(this.client.config.endpoint+"/account/sessions/phone");return this.client.call("put",o,{"content-type":"application/json"},i)}createSession(e,t){if(void 0===e)throw new n('Missing required parameter: "userId"');if(void 0===t)throw new n('Missing required parameter: "secret"');const i={};void 0!==e&&(i.userId=e),void 0!==t&&(i.secret=t);const o=new URL(this.client.config.endpoint+"/account/sessions/token");return this.client.call("post",o,{"content-type":"application/json"},i)}getSession(e){if(void 0===e)throw new n('Missing required parameter: "sessionId"');const t="/account/sessions/{sessionId}".replace("{sessionId}",e),i=new URL(this.client.config.endpoint+t);return this.client.call("get",i,{"content-type":"application/json"},{})}updateSession(e){if(void 0===e)throw new n('Missing required parameter: "sessionId"');const t="/account/sessions/{sessionId}".replace("{sessionId}",e),i=new URL(this.client.config.endpoint+t);return this.client.call("patch",i,{"content-type":"application/json"},{})}deleteSession(e){if(void 0===e)throw new n('Missing required parameter: "sessionId"');const t="/account/sessions/{sessionId}".replace("{sessionId}",e),i=new URL(this.client.config.endpoint+t);return this.client.call("delete",i,{"content-type":"application/json"},{})}updateStatus(){const e=new URL(this.client.config.endpoint+"/account/status");return this.client.call("patch",e,{"content-type":"application/json"},{})}createPushTarget(e,t,i){if(void 0===e)throw new n('Missing required parameter: "targetId"');if(void 0===t)throw new n('Missing required parameter: "identifier"');const o={};void 0!==e&&(o.targetId=e),void 0!==t&&(o.identifier=t),void 0!==i&&(o.providerId=i);const r=new URL(this.client.config.endpoint+"/account/targets/push");return this.client.call("post",r,{"content-type":"application/json"},o)}updatePushTarget(e,t){if(void 0===e)throw new n('Missing required parameter: "targetId"');if(void 0===t)throw new n('Missing required parameter: "identifier"');const i="/account/targets/{targetId}/push".replace("{targetId}",e),o={};void 0!==t&&(o.identifier=t);const r=new URL(this.client.config.endpoint+i);return this.client.call("put",r,{"content-type":"application/json"},o)}deletePushTarget(e){if(void 0===e)throw new n('Missing required parameter: "targetId"');const t="/account/targets/{targetId}/push".replace("{targetId}",e),i=new URL(this.client.config.endpoint+t);return this.client.call("delete",i,{"content-type":"application/json"},{})}createEmailToken(e,t,i){if(void 0===e)throw new n('Missing required parameter: "userId"');if(void 0===t)throw new n('Missing required parameter: "email"');const o={};void 0!==e&&(o.userId=e),void 0!==t&&(o.email=t),void 0!==i&&(o.phrase=i);const r=new URL(this.client.config.endpoint+"/account/tokens/email");return this.client.call("post",r,{"content-type":"application/json"},o)}createMagicURLToken(e,t,i,o){if(void 0===e)throw new n('Missing required parameter: "userId"');if(void 0===t)throw new n('Missing required parameter: "email"');const r={};void 0!==e&&(r.userId=e),void 0!==t&&(r.email=t),void 0!==i&&(r.url=i),void 0!==o&&(r.phrase=o);const a=new URL(this.client.config.endpoint+"/account/tokens/magic-url");return this.client.call("post",a,{"content-type":"application/json"},r)}createOAuth2Token(e,t,i,o){if(void 0===e)throw new n('Missing required parameter: "provider"');const a="/account/tokens/oauth2/{provider}".replace("{provider}",e),s={};void 0!==t&&(s.success=t),void 0!==i&&(s.failure=i),void 0!==o&&(s.scopes=o);const c=new URL(this.client.config.endpoint+a);s.project=this.client.config.project;for(const[e,t]of Object.entries(r.flatten(s)))c.searchParams.append(e,t);return"undefined"!=typeof window&&(null===window||void 0===window?void 0:window.location)?void(window.location.href=c.toString()):c.toString()}createPhoneToken(e,t){if(void 0===e)throw new n('Missing required parameter: "userId"');if(void 0===t)throw new n('Missing required parameter: "phone"');const i={};void 0!==e&&(i.userId=e),void 0!==t&&(i.phone=t);const o=new URL(this.client.config.endpoint+"/account/tokens/phone");return this.client.call("post",o,{"content-type":"application/json"},i)}createVerification(e){if(void 0===e)throw new n('Missing required parameter: "url"');const t={};void 0!==e&&(t.url=e);const i=new URL(this.client.config.endpoint+"/account/verification");return this.client.call("post",i,{"content-type":"application/json"},t)}updateVerification(e,t){if(void 0===e)throw new n('Missing required parameter: "userId"');if(void 0===t)throw new n('Missing required parameter: "secret"');const i={};void 0!==e&&(i.userId=e),void 0!==t&&(i.secret=t);const o=new URL(this.client.config.endpoint+"/account/verification");return this.client.call("put",o,{"content-type":"application/json"},i)}createPhoneVerification(){const e=new URL(this.client.config.endpoint+"/account/verification/phone");return this.client.call("post",e,{"content-type":"application/json"},{})}updatePhoneVerification(e,t){if(void 0===e)throw new n('Missing required parameter: "userId"');if(void 0===t)throw new n('Missing required parameter: "secret"');const i={};void 0!==e&&(i.userId=e),void 0!==t&&(i.secret=t);const o=new URL(this.client.config.endpoint+"/account/verification/phone");return this.client.call("put",o,{"content-type":"application/json"},i)}},e.AppwriteException=n,e.Avatars=class{constructor(e){this.client=e}getBrowser(e,t,i,o){if(void 0===e)throw new n('Missing required parameter: "code"');const a="/avatars/browsers/{code}".replace("{code}",e),s={};void 0!==t&&(s.width=t),void 0!==i&&(s.height=i),void 0!==o&&(s.quality=o);const c=new URL(this.client.config.endpoint+a);s.project=this.client.config.project;for(const[e,t]of Object.entries(r.flatten(s)))c.searchParams.append(e,t);return c.toString()}getCreditCard(e,t,i,o){if(void 0===e)throw new n('Missing required parameter: "code"');const a="/avatars/credit-cards/{code}".replace("{code}",e),s={};void 0!==t&&(s.width=t),void 0!==i&&(s.height=i),void 0!==o&&(s.quality=o);const c=new URL(this.client.config.endpoint+a);s.project=this.client.config.project;for(const[e,t]of Object.entries(r.flatten(s)))c.searchParams.append(e,t);return c.toString()}getFavicon(e){if(void 0===e)throw new n('Missing required parameter: "url"');const t={};void 0!==e&&(t.url=e);const i=new URL(this.client.config.endpoint+"/avatars/favicon");t.project=this.client.config.project;for(const[e,n]of Object.entries(r.flatten(t)))i.searchParams.append(e,n);return i.toString()}getFlag(e,t,i,o){if(void 0===e)throw new n('Missing required parameter: "code"');const a="/avatars/flags/{code}".replace("{code}",e),s={};void 0!==t&&(s.width=t),void 0!==i&&(s.height=i),void 0!==o&&(s.quality=o);const c=new URL(this.client.config.endpoint+a);s.project=this.client.config.project;for(const[e,t]of Object.entries(r.flatten(s)))c.searchParams.append(e,t);return c.toString()}getImage(e,t,i){if(void 0===e)throw new n('Missing required parameter: "url"');const o={};void 0!==e&&(o.url=e),void 0!==t&&(o.width=t),void 0!==i&&(o.height=i);const a=new URL(this.client.config.endpoint+"/avatars/image");o.project=this.client.config.project;for(const[e,t]of Object.entries(r.flatten(o)))a.searchParams.append(e,t);return a.toString()}getInitials(e,t,i,n){const o={};void 0!==e&&(o.name=e),void 0!==t&&(o.width=t),void 0!==i&&(o.height=i),void 0!==n&&(o.background=n);const a=new URL(this.client.config.endpoint+"/avatars/initials");o.project=this.client.config.project;for(const[e,t]of Object.entries(r.flatten(o)))a.searchParams.append(e,t);return a.toString()}getQR(e,t,i,o){if(void 0===e)throw new n('Missing required parameter: "text"');const a={};void 0!==e&&(a.text=e),void 0!==t&&(a.size=t),void 0!==i&&(a.margin=i),void 0!==o&&(a.download=o);const s=new URL(this.client.config.endpoint+"/avatars/qr");a.project=this.client.config.project;for(const[e,t]of Object.entries(r.flatten(a)))s.searchParams.append(e,t);return s.toString()}},e.Client=o,e.Databases=class{constructor(e){this.client=e}listDocuments(e,t,i){if(void 0===e)throw new n('Missing required parameter: "databaseId"');if(void 0===t)throw new n('Missing required parameter: "collectionId"');const o="/databases/{databaseId}/collections/{collectionId}/documents".replace("{databaseId}",e).replace("{collectionId}",t),r={};void 0!==i&&(r.queries=i);const a=new URL(this.client.config.endpoint+o);return this.client.call("get",a,{"content-type":"application/json"},r)}createDocument(e,t,i,o,r){if(void 0===e)throw new n('Missing required parameter: "databaseId"');if(void 0===t)throw new n('Missing required parameter: "collectionId"');if(void 0===i)throw new n('Missing required parameter: "documentId"');if(void 0===o)throw new n('Missing required parameter: "data"');const a="/databases/{databaseId}/collections/{collectionId}/documents".replace("{databaseId}",e).replace("{collectionId}",t),s={};void 0!==i&&(s.documentId=i),void 0!==o&&(s.data=o),void 0!==r&&(s.permissions=r);const c=new URL(this.client.config.endpoint+a);return this.client.call("post",c,{"content-type":"application/json"},s)}getDocument(e,t,i,o){if(void 0===e)throw new n('Missing required parameter: "databaseId"');if(void 0===t)throw new n('Missing required parameter: "collectionId"');if(void 0===i)throw new n('Missing required parameter: "documentId"');const r="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",e).replace("{collectionId}",t).replace("{documentId}",i),a={};void 0!==o&&(a.queries=o);const s=new URL(this.client.config.endpoint+r);return this.client.call("get",s,{"content-type":"application/json"},a)}updateDocument(e,t,i,o,r){if(void 0===e)throw new n('Missing required parameter: "databaseId"');if(void 0===t)throw new n('Missing required parameter: "collectionId"');if(void 0===i)throw new n('Missing required parameter: "documentId"');const a="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",e).replace("{collectionId}",t).replace("{documentId}",i),s={};void 0!==o&&(s.data=o),void 0!==r&&(s.permissions=r);const c=new URL(this.client.config.endpoint+a);return this.client.call("patch",c,{"content-type":"application/json"},s)}deleteDocument(e,t,i){if(void 0===e)throw new n('Missing required parameter: "databaseId"');if(void 0===t)throw new n('Missing required parameter: "collectionId"');if(void 0===i)throw new n('Missing required parameter: "documentId"');const o="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",e).replace("{collectionId}",t).replace("{documentId}",i),r=new URL(this.client.config.endpoint+o);return this.client.call("delete",r,{"content-type":"application/json"},{})}},e.Functions=class{constructor(e){this.client=e}listExecutions(e,t,i){if(void 0===e)throw new n('Missing required parameter: "functionId"');const o="/functions/{functionId}/executions".replace("{functionId}",e),r={};void 0!==t&&(r.queries=t),void 0!==i&&(r.search=i);const a=new URL(this.client.config.endpoint+o);return this.client.call("get",a,{"content-type":"application/json"},r)}createExecution(e,t,i,o,r,a,s){if(void 0===e)throw new n('Missing required parameter: "functionId"');const c="/functions/{functionId}/executions".replace("{functionId}",e),d={};void 0!==t&&(d.body=t),void 0!==i&&(d.async=i),void 0!==o&&(d.path=o),void 0!==r&&(d.method=r),void 0!==a&&(d.headers=a),void 0!==s&&(d.scheduledAt=s);const l=new URL(this.client.config.endpoint+c);return this.client.call("post",l,{"content-type":"application/json"},d)}getExecution(e,t){if(void 0===e)throw new n('Missing required parameter: "functionId"');if(void 0===t)throw new n('Missing required parameter: "executionId"');const i="/functions/{functionId}/executions/{executionId}".replace("{functionId}",e).replace("{executionId}",t),o=new URL(this.client.config.endpoint+i);return this.client.call("get",o,{"content-type":"application/json"},{})}},e.Graphql=class{constructor(e){this.client=e}query(e){if(void 0===e)throw new n('Missing required parameter: "query"');const t={};void 0!==e&&(t.query=e);const i=new URL(this.client.config.endpoint+"/graphql");return this.client.call("post",i,{"x-sdk-graphql":"true","content-type":"application/json"},t)}mutation(e){if(void 0===e)throw new n('Missing required parameter: "query"');const t={};void 0!==e&&(t.query=e);const i=new URL(this.client.config.endpoint+"/graphql/mutation");return this.client.call("post",i,{"x-sdk-graphql":"true","content-type":"application/json"},t)}},e.ID=f,e.Locale=class{constructor(e){this.client=e}get(){const e=new URL(this.client.config.endpoint+"/locale");return this.client.call("get",e,{"content-type":"application/json"},{})}listCodes(){const e=new URL(this.client.config.endpoint+"/locale/codes");return this.client.call("get",e,{"content-type":"application/json"},{})}listContinents(){const e=new URL(this.client.config.endpoint+"/locale/continents");return this.client.call("get",e,{"content-type":"application/json"},{})}listCountries(){const e=new URL(this.client.config.endpoint+"/locale/countries");return this.client.call("get",e,{"content-type":"application/json"},{})}listCountriesEU(){const e=new URL(this.client.config.endpoint+"/locale/countries/eu");return this.client.call("get",e,{"content-type":"application/json"},{})}listCountriesPhones(){const e=new URL(this.client.config.endpoint+"/locale/countries/phones");return this.client.call("get",e,{"content-type":"application/json"},{})}listCurrencies(){const e=new URL(this.client.config.endpoint+"/locale/currencies");return this.client.call("get",e,{"content-type":"application/json"},{})}listLanguages(){const e=new URL(this.client.config.endpoint+"/locale/languages");return this.client.call("get",e,{"content-type":"application/json"},{})}},e.Messaging=class{constructor(e){this.client=e}createSubscriber(e,t,i){if(void 0===e)throw new n('Missing required parameter: "topicId"');if(void 0===t)throw new n('Missing required parameter: "subscriberId"');if(void 0===i)throw new n('Missing required parameter: "targetId"');const o="/messaging/topics/{topicId}/subscribers".replace("{topicId}",e),r={};void 0!==t&&(r.subscriberId=t),void 0!==i&&(r.targetId=i);const a=new URL(this.client.config.endpoint+o);return this.client.call("post",a,{"content-type":"application/json"},r)}deleteSubscriber(e,t){if(void 0===e)throw new n('Missing required parameter: "topicId"');if(void 0===t)throw new n('Missing required parameter: "subscriberId"');const i="/messaging/topics/{topicId}/subscribers/{subscriberId}".replace("{topicId}",e).replace("{subscriberId}",t),o=new URL(this.client.config.endpoint+i);return this.client.call("delete",o,{"content-type":"application/json"},{})}},e.Permission=a,e.Query=i,e.Role=class{static any(){return"any"}static user(e,t=""){return""===t?`user:${e}`:`user:${e}/${t}`}static users(e=""){return""===e?"users":`users/${e}`}static guests(){return"guests"}static team(e,t=""){return""===t?`team:${e}`:`team:${e}/${t}`}static member(e){return`member:${e}`}static label(e){return`label:${e}`}},e.Storage=class{constructor(e){this.client=e}listFiles(e,t,i){if(void 0===e)throw new n('Missing required parameter: "bucketId"');const o="/storage/buckets/{bucketId}/files".replace("{bucketId}",e),r={};void 0!==t&&(r.queries=t),void 0!==i&&(r.search=i);const a=new URL(this.client.config.endpoint+o);return this.client.call("get",a,{"content-type":"application/json"},r)}createFile(e,t,i,o,r=e=>{}){if(void 0===e)throw new n('Missing required parameter: "bucketId"');if(void 0===t)throw new n('Missing required parameter: "fileId"');if(void 0===i)throw new n('Missing required parameter: "file"');const a="/storage/buckets/{bucketId}/files".replace("{bucketId}",e),s={};void 0!==t&&(s.fileId=t),void 0!==i&&(s.file=i),void 0!==o&&(s.permissions=o);const c=new URL(this.client.config.endpoint+a);return this.client.chunkedUpload("post",c,{"content-type":"multipart/form-data"},s,r)}getFile(e,t){if(void 0===e)throw new n('Missing required parameter: "bucketId"');if(void 0===t)throw new n('Missing required parameter: "fileId"');const i="/storage/buckets/{bucketId}/files/{fileId}".replace("{bucketId}",e).replace("{fileId}",t),o=new URL(this.client.config.endpoint+i);return this.client.call("get",o,{"content-type":"application/json"},{})}updateFile(e,t,i,o){if(void 0===e)throw new n('Missing required parameter: "bucketId"');if(void 0===t)throw new n('Missing required parameter: "fileId"');const r="/storage/buckets/{bucketId}/files/{fileId}".replace("{bucketId}",e).replace("{fileId}",t),a={};void 0!==i&&(a.name=i),void 0!==o&&(a.permissions=o);const s=new URL(this.client.config.endpoint+r);return this.client.call("put",s,{"content-type":"application/json"},a)}deleteFile(e,t){if(void 0===e)throw new n('Missing required parameter: "bucketId"');if(void 0===t)throw new n('Missing required parameter: "fileId"');const i="/storage/buckets/{bucketId}/files/{fileId}".replace("{bucketId}",e).replace("{fileId}",t),o=new URL(this.client.config.endpoint+i);return this.client.call("delete",o,{"content-type":"application/json"},{})}getFileDownload(e,t){if(void 0===e)throw new n('Missing required parameter: "bucketId"');if(void 0===t)throw new n('Missing required parameter: "fileId"');const i="/storage/buckets/{bucketId}/files/{fileId}/download".replace("{bucketId}",e).replace("{fileId}",t),o={},a=new URL(this.client.config.endpoint+i);o.project=this.client.config.project;for(const[e,t]of Object.entries(r.flatten(o)))a.searchParams.append(e,t);return a.toString()}getFilePreview(e,t,i,o,a,s,c,d,l,p,u,h,g){if(void 0===e)throw new n('Missing required parameter: "bucketId"');if(void 0===t)throw new n('Missing required parameter: "fileId"');const m="/storage/buckets/{bucketId}/files/{fileId}/preview".replace("{bucketId}",e).replace("{fileId}",t),w={};void 0!==i&&(w.width=i),void 0!==o&&(w.height=o),void 0!==a&&(w.gravity=a),void 0!==s&&(w.quality=s),void 0!==c&&(w.borderWidth=c),void 0!==d&&(w.borderColor=d),void 0!==l&&(w.borderRadius=l),void 0!==p&&(w.opacity=p),void 0!==u&&(w.rotation=u),void 0!==h&&(w.background=h),void 0!==g&&(w.output=g);const f=new URL(this.client.config.endpoint+m);w.project=this.client.config.project;for(const[e,t]of Object.entries(r.flatten(w)))f.searchParams.append(e,t);return f.toString()}getFileView(e,t){if(void 0===e)throw new n('Missing required parameter: "bucketId"');if(void 0===t)throw new n('Missing required parameter: "fileId"');const i="/storage/buckets/{bucketId}/files/{fileId}/view".replace("{bucketId}",e).replace("{fileId}",t),o={},a=new URL(this.client.config.endpoint+i);o.project=this.client.config.project;for(const[e,t]of Object.entries(r.flatten(o)))a.searchParams.append(e,t);return a.toString()}},e.Teams=class{constructor(e){this.client=e}list(e,t){const i={};void 0!==e&&(i.queries=e),void 0!==t&&(i.search=t);const n=new URL(this.client.config.endpoint+"/teams");return this.client.call("get",n,{"content-type":"application/json"},i)}create(e,t,i){if(void 0===e)throw new n('Missing required parameter: "teamId"');if(void 0===t)throw new n('Missing required parameter: "name"');const o={};void 0!==e&&(o.teamId=e),void 0!==t&&(o.name=t),void 0!==i&&(o.roles=i);const r=new URL(this.client.config.endpoint+"/teams");return this.client.call("post",r,{"content-type":"application/json"},o)}get(e){if(void 0===e)throw new n('Missing required parameter: "teamId"');const t="/teams/{teamId}".replace("{teamId}",e),i=new URL(this.client.config.endpoint+t);return this.client.call("get",i,{"content-type":"application/json"},{})}updateName(e,t){if(void 0===e)throw new n('Missing required parameter: "teamId"');if(void 0===t)throw new n('Missing required parameter: "name"');const i="/teams/{teamId}".replace("{teamId}",e),o={};void 0!==t&&(o.name=t);const r=new URL(this.client.config.endpoint+i);return this.client.call("put",r,{"content-type":"application/json"},o)}delete(e){if(void 0===e)throw new n('Missing required parameter: "teamId"');const t="/teams/{teamId}".replace("{teamId}",e),i=new URL(this.client.config.endpoint+t);return this.client.call("delete",i,{"content-type":"application/json"},{})}listMemberships(e,t,i){if(void 0===e)throw new n('Missing required parameter: "teamId"');const o="/teams/{teamId}/memberships".replace("{teamId}",e),r={};void 0!==t&&(r.queries=t),void 0!==i&&(r.search=i);const a=new URL(this.client.config.endpoint+o);return this.client.call("get",a,{"content-type":"application/json"},r)}createMembership(e,t,i,o,r,a,s){if(void 0===e)throw new n('Missing required parameter: "teamId"');if(void 0===t)throw new n('Missing required parameter: "roles"');const c="/teams/{teamId}/memberships".replace("{teamId}",e),d={};void 0!==i&&(d.email=i),void 0!==o&&(d.userId=o),void 0!==r&&(d.phone=r),void 0!==t&&(d.roles=t),void 0!==a&&(d.url=a),void 0!==s&&(d.name=s);const l=new URL(this.client.config.endpoint+c);return this.client.call("post",l,{"content-type":"application/json"},d)}getMembership(e,t){if(void 0===e)throw new n('Missing required parameter: "teamId"');if(void 0===t)throw new n('Missing required parameter: "membershipId"');const i="/teams/{teamId}/memberships/{membershipId}".replace("{teamId}",e).replace("{membershipId}",t),o=new URL(this.client.config.endpoint+i);return this.client.call("get",o,{"content-type":"application/json"},{})}updateMembership(e,t,i){if(void 0===e)throw new n('Missing required parameter: "teamId"');if(void 0===t)throw new n('Missing required parameter: "membershipId"');if(void 0===i)throw new n('Missing required parameter: "roles"');const o="/teams/{teamId}/memberships/{membershipId}".replace("{teamId}",e).replace("{membershipId}",t),r={};void 0!==i&&(r.roles=i);const a=new URL(this.client.config.endpoint+o);return this.client.call("patch",a,{"content-type":"application/json"},r)}deleteMembership(e,t){if(void 0===e)throw new n('Missing required parameter: "teamId"');if(void 0===t)throw new n('Missing required parameter: "membershipId"');const i="/teams/{teamId}/memberships/{membershipId}".replace("{teamId}",e).replace("{membershipId}",t),o=new URL(this.client.config.endpoint+i);return this.client.call("delete",o,{"content-type":"application/json"},{})}updateMembershipStatus(e,t,i,o){if(void 0===e)throw new n('Missing required parameter: "teamId"');if(void 0===t)throw new n('Missing required parameter: "membershipId"');if(void 0===i)throw new n('Missing required parameter: "userId"');if(void 0===o)throw new n('Missing required parameter: "secret"');const r="/teams/{teamId}/memberships/{membershipId}/status".replace("{teamId}",e).replace("{membershipId}",t),a={};void 0!==i&&(a.userId=i),void 0!==o&&(a.secret=o);const s=new URL(this.client.config.endpoint+r);return this.client.call("patch",s,{"content-type":"application/json"},a)}getPrefs(e){if(void 0===e)throw new n('Missing required parameter: "teamId"');const t="/teams/{teamId}/prefs".replace("{teamId}",e),i=new URL(this.client.config.endpoint+t);return this.client.call("get",i,{"content-type":"application/json"},{})}updatePrefs(e,t){if(void 0===e)throw new n('Missing required parameter: "teamId"');if(void 0===t)throw new n('Missing required parameter: "prefs"');const i="/teams/{teamId}/prefs".replace("{teamId}",e),o={};void 0!==t&&(o.prefs=t);const r=new URL(this.client.config.endpoint+i);return this.client.call("put",r,{"content-type":"application/json"},o)}},Object.defineProperty(e,"__esModule",{value:!0})}(this.Appwrite=this.Appwrite||{});
//# sourceMappingURL=/sm/523cf9849d80268dcabe23454aedf34bb6047828bee1a3f40de7efc38718a933.map
